name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, develop ]

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: |
          cd frontend-next
          pnpm build

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend-next
          vercel-args: '--prod'

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Preview deployed')
            );
            
            const commentBody = `## 🚀 Preview Deployed
            
            Your changes have been deployed to a preview environment:
            - **Preview URL**: https://blockbase-preview-${{ github.event.number }}.vercel.app
            - **Build Status**: ✅ Success
            - **Commit**: ${{ github.sha }}
            
            ### 📊 Build Details
            - **Branch**: ${{ github.head_ref }}
            - **Author**: ${{ github.actor }}
            - **Triggered by**: Pull Request #${{ github.event.number }}
            
            ### 🔍 Testing Checklist
            - [ ] Wallet connection works
            - [ ] Property listing loads
            - [ ] Mobile responsiveness
            - [ ] Performance metrics
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
